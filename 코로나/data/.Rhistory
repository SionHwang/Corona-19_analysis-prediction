stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 10, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 11, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 12, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 13, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 15, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 16, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 17, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
ggtitle("Confirmed number and mortality by age group") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_line(mapping = aes(x = age, y = death_rate),
size = 3, shape = 17, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 17, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 18, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 22, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 21, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "steelblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 21, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "blue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 21, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "whiteblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 21, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "grayblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 21, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
age_mu %>% ggplot() +
ggtitle("Confirmed number and mortality by age group") +
geom_bar(mapping = aes(x = age, y = confirmed/1000000),
stat = "identity", width=0.5, fill = "skyblue") +
geom_point(mapping = aes(x = age, y = death_rate),
size = 3, shape = 21, fill = "red") + xlab(label = "Age") +
scale_y_continuous(name = expression("mortality"),
sec.axis = sec_axis(~ . *1000000, name = "number of confirmed cases")) +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="red"))
#연령, 성별에 따른 확진자 수
patient <- read.csv("Patientinfo.csv")
patient %>% filter(sex != '') %>% filter(age != '') %>%
group_by(age, sex) %>% summarise(N=n()) %>%
ggplot(aes(x=age, y=N, fill=sex)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("Number of confirmed cases by age and gender") +
xlab(label = "Age") +
ylab(label = "number of confirmed cases") +
theme(text=element_text(color="grey50")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="steelblue"))
patient %>% filter(sex != '') %>% filter(age != '') %>%
group_by(age, sex) %>% summarise(N=n()) %>%
ggplot(aes(x=age, y=N, fill=sex)) +
geom_bar(stat="identity", position=position_dodge()) +
ggtitle("Number of confirmed cases by age and gender") +
xlab(label = "Age") +
ylab(label = "number of confirmed cases") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
patient %>% filter(sex != '') %>% filter(age != '') %>%
group_by(age, sex) %>% summarise(N=n()) %>%
ggplot(aes(x=age, y=N, fill=sex)) +
ggtitle("Number of confirmed cases by age and gender") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "Age") +
ylab(label = "number of confirmed cases") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
time <- c("2020-01-21","2020-01-22","2020-01-23","2020-01-24","2020-01-25","2020-01-26","2020-01-27",
"2020-01-28","2020-01-29","2020-01-30","2020-01-31","2020-02-01","2020-02-02","2020-02-03",
"2020-02-04","2020-02-05","2020-02-06","2020-02-07","2020-02-08","2020-02-09","2020-02-10",
"2020-02-11","2020-02-12","2020-02-13","2020-02-14","2020-02-15","2020-02-16","2020-02-17",
"2020-02-18","2020-02-19")
confirm <- c("1","1","1","2","2","2","4","4","4","7","11","12","15","15","16","21","24","24","24","27",
"27","28","28","28","28","28","29","30","31","51")
cum_heal <- c("0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","1","2","2","2","3","4",
"4","7","7","7","9","9","10","10","16")
cum_dead <- c("0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0",
"0","0","0","0","0","0","0","0")
kk <- data.frame(time,confirm,cum_heal,cum_dead)
kk$time <- as.Date(kk$time)
kk$confirm <- as.integer(kk$confirm)
kk$cum_heal <- as.integer(kk$cum_heal)
kk$cum_dead <- as.integer(kk$cum_dead)
read.csv(Kor_coda)
read.csv("/Users/cpprhtn/Desktop/Kor_coda.csv") -> dfdf
View(dfdf)
View(kk)
View(kk)
dfdf[30:,]
dfdf[30:]
dfdf[30:,:]
dfdf[c(30:),:]
debugSource('~/Desktop/git_local/Corona-19_made_JW/코로나/corona_distribute_Kor.R', echo=TRUE)
dfdf[c(30:)]
dfdf[,c(30:)]
View(dfdf)
dfdf[,c(30:132)]
dfdf[,c(30:131)]
dfdf[c(30:131),]
dfdf[c(30:131),] -> dfdf2
last_data <- rbind(kk,dfdf2)
str(kk)
str(dfdf2)
dfdf2 <- dfdf2[,c(2:5)]
last_data <- rbind(kk,dfdf2)
View(last_data)
View(last_data)
write.csv(last_data, "/Users/cpprhtn/Desktop/last_data.csv") #머신러닝을 위한 데이터
library(mlbench)
install.packages("mlbench")
install.packages("caret")
library(mlbench)
library(caret)
data("PimaIndiansDiabetes")
library(mlbench)
library(caret)
data("PimaIndiansDiabetes")
dataset <- PimaIndiansDiabetes
View(dataset)
View(dataset)
View(PimaIndiansDiabetes)
View(dataset)
data("PimaIndiansDiabetes")
dataset <- PimaIndiansDiabetes
control <- trainControl(method = "repeatedcv", number = 10, repeats = 3)
seed <- 7
metric <- "Accuracy"
preProcess = c("center","scale")
set.seed(seed)
fit.lda <- train(diabetes~.,data = dataset, metric, preProcess = preProcess, trControl= control)
library(caret)
fit.lda <- train(diabetes~.,data = dataset, metric, preProcess = preProcess, trControl= control)
library(readr)
SeoulFloating <- read_csv("SeoulFloating.csv")
View(SeoulFloating)
library(readr)
SeoulFloating <- read_csv("SeoulFloating.csv")
View(SeoulFloating)
installed.packages("caret")
remove.packages("caret")
setwd("/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
remove.packages("caret")
library()
remove.packages("caret")
remove.packages("mlbench")
setwd("/Users/cpprhtn/Desktop/git_local/Corona-19_made_JW/코로나/data")
----------------------------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
library(reshape2)
update.packages("dplyr")
----------------------------------------------
library(dplyr)
#연령에 따른 유동 인구
move <- rezad.csv("SeoulFloating.csv")
#연령에 따른 유동 인구
move <- read.csv("SeoulFloating.csv")
#연령, 성별에 따른 확진자 수
patient <- read.csv("Patientinfo.csv")
View(patient)
View(patient)
patient %>% filter(sex != '') %>% filter(age != '') %>%
group_by(age, sex) %>% summarise(N=n()) %>%
ggplot(aes(x=age, y=N, fill=sex)) +
ggtitle("Number of confirmed cases by age and gender") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "Age") +
ylab(label = "number of confirmed cases") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("Number of confirmed cases by birth_year and gender") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "birth_year") +
ylab(label = "number of confirmed cases") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "birth_year") +
ylab(label = "floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(2)) +
xlab(label = "birth_year") +
ylab(label = "floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(10)) +
xlab(label = "birth_year") +
ylab(label = "floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.5, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "birth_year") +
ylab(label = "floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 1, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "birth_year") +
ylab(label = "floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "birth_year") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(sex != '') %>%
group_by(sex, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=sex, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge()) +
xlab(label = "sex") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(sex != '') %>%
group_by(sex, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=sex, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 0.5) +
xlab(label = "sex") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(sex != '') %>%
group_by(sex, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=sex, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 0.4) +
xlab(label = "sex") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(sex != '') %>%
group_by(sex, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=sex, y=N, fill=fp_num)) +
ggtitle("floating population following sex") +
geom_bar(stat="identity", position=position_dodge(), width = 0.4) +
xlab(label = "sex") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 0.6) +
xlab(label = "birth_year") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 1) +
xlab(label = "birth_year") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 10) +
xlab(label = "birth_year") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 7) +
xlab(label = "birth_year") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
move %>% filter(fp_num != '') %>% filter(birth_year != '') %>%
group_by(birth_year, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=birth_year, y=N, fill=fp_num)) +
ggtitle("floating population following age") +
geom_bar(stat="identity", position=position_dodge(), width = 6) +
xlab(label = "birth_year") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
#시간에 따른 유동인구
move %>% filter(fp_num != '') %>% filter(hour != '') %>%
group_by(hour, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=hour, y=N, fill=fp_num)) +
ggtitle("floating population following hour") +
geom_bar(stat="identity", position=position_dodge(), width = 0.4) +
xlab(label = "hour") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
#시간에 따른 유동인구
move %>% filter(fp_num != '') %>% filter(hour != '') %>%
group_by(hour, fp_num) %>% summarise(N=n()) %>%
ggplot(aes(x=hour, y=N, fill=fp_num)) +
ggtitle("floating population following hour") +
geom_line(lwd = 2) +
geom_bar(stat="identity", position=position_dodge(), width = 0.4) +
xlab(label = "hour") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
geom_line(lwd = 2) +
geom_bar(stat="identity", position=position_dodge(), width = 0.5) +
xlab(label = "hour") +
ylab(label = "Floating population") +
theme(text=element_text(color="black")) +
theme(axis.title=element_text(size=15)) +
theme(plot.title=element_text(hjust = 0.6, size=20, color="darkgreen"))
